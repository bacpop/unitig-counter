From ddcba3b28b0e3dc1ca5ec1e57c32fd1877e5133a Mon Sep 17 00:00:00 2001
From: John Lees <lees.john6@gmail.com>
Date: Thu, 28 Feb 2019 14:04:45 -0500
Subject: [PATCH] Fix for boost include dir

---
 gatb-core/CMakeLists.txt | 43 +++++++++++++++++++++----------------------
 1 file changed, 21 insertions(+), 22 deletions(-)

diff --git a/gatb-core/CMakeLists.txt b/gatb-core/CMakeLists.txt
index f48a70b9..b0d56527 100644
--- a/gatb-core/CMakeLists.txt
+++ b/gatb-core/CMakeLists.txt
@@ -64,7 +64,7 @@ if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
     IF(NOT CMAKE_CXX_COMPILER_VERSION) #for old cmakes
         include(CheckCompiler)
     ENDIF()
-    if (CMAKE_CXX_COMPILER_VERSION  VERSION_LESS 4.7) 
+    if (CMAKE_CXX_COMPILER_VERSION  VERSION_LESS 4.7)
         message(FATAL_ERROR "Insufficient gcc version (gcc>=4.7 needed)")
     endif()
 
@@ -83,7 +83,7 @@ elseif (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
         endif()
 
     else()
-        if (CMAKE_CXX_COMPILER_VERSION  VERSION_LESS 3.2) 
+        if (CMAKE_CXX_COMPILER_VERSION  VERSION_LESS 3.2)
             message(FATAL_ERROR "Insufficient clang version (clang>=3.2 needed)")
         endif()
 
@@ -124,7 +124,7 @@ if (NONCANONICAL)
 endif()
 
 
-# detect SSE for popcount 
+# detect SSE for popcount
 # this was for emphf, maybe it's for something else also? otherwise this part can be removed.
 #
 # from https://github.com/rurban/smhasher/blob/master/CMakeLists.txt
@@ -163,30 +163,30 @@ IF(SSE4_2_FOUND AND (NOT NO_SSE))
 ENDIF()
 
 # WARNING !!! For the moment, we need to remove some warnings (on Macos) due to use of offsetof macro on non Plain Old Data
-set (LIBRARY_COMPILE_DEFINITIONS "${LIBRARY_COMPILE_DEFINITIONS} -Wno-invalid-offsetof") 
+set (LIBRARY_COMPILE_DEFINITIONS "${LIBRARY_COMPILE_DEFINITIONS} -Wno-invalid-offsetof")
 
 # We may have some custom compilation flags.
 if (use_allocator)
-    set (LIBRARY_COMPILE_DEFINITIONS "${LIBRARY_COMPILE_DEFINITIONS} -DGATB_USE_CUSTOM_ALLOCATOR") 
+    set (LIBRARY_COMPILE_DEFINITIONS "${LIBRARY_COMPILE_DEFINITIONS} -DGATB_USE_CUSTOM_ALLOCATOR")
 endif()
 
 message("-- Options: ${LIBRARY_COMPILE_DEFINITIONS}")
 
 ################################################################################
-#  DIRECTORIES MANAGEMENT 
+#  DIRECTORIES MANAGEMENT
 ################################################################################
 
 set (LIBRARY_OUTPUT_PATH       ${PROJECT_BINARY_DIR}/lib/${CMAKE_BUILD_TYPE})
 set (EXECUTABLE_OUTPUT_PATH    ${PROJECT_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE})
 
 ################################################################################
-#  EXPORT FOR THIRD PARTIES 
+#  EXPORT FOR THIRD PARTIES
 ################################################################################
 
 # In case you need to use external libraries, you can use the following variables:
 #   EXTRALIBS      : names of the libraries to be used
 #   EXTRALIBS_PATH : directory where the libraries are
-#   EXTRALIBS_INC  : directory of the include files for the libraries 
+#   EXTRALIBS_INC  : directory of the include files for the libraries
 # For instance, you can do the following:
 #       cmake -DEXTRALIBS="somelib"  -DEXTRALIBS_PATH="/somewhere/libs"  -DEXTRALIBS_INC="/somewhere/inc" ..
 
@@ -208,8 +208,7 @@ set (gatb-core-flags ${LIBRARY_COMPILE_DEFINITIONS})
 
 # We define the include directories used for linking binary based on gatb core
 # Note that we need to add boost include dependency (not working otherwise with clang)
-set (gatb-core-includes ${PROJECT_BINARY_DIR}/include  ${PROJECT_BINARY_DIR}/include/${CMAKE_BUILD_TYPE} ${PROJECT_SOURCE_DIR}/src  ${PROJECT_SOURCE_DIR}/thirdparty ${gatb-core-extra-libraries-inc})
-
+set (gatb-core-includes ${PROJECT_BINARY_DIR}/include  ${PROJECT_BINARY_DIR}/include/${CMAKE_BUILD_TYPE} ${PROJECT_SOURCE_DIR}/src ${Boost_INCLUDE_DIR} ${PROJECT_SOURCE_DIR}/thirdparty ${gatb-core-extra-libraries-inc})
 # We define the libraries used for linking binary based on gatb core
 set (gatb-core-libraries   gatbcore-static  dl  pthread  z hdf5 ${gatb-core-extra-libraries})
 
@@ -223,7 +222,7 @@ set (gatb-core-libraries      ${gatb-core-libraries}      PARENT_SCOPE)
 set (gatb-core-cmake          ${gatb-core-cmake}          PARENT_SCOPE)
 
 ################################################################################
-#  LIBRARY GENERATION 
+#  LIBRARY GENERATION
 ################################################################################
 ADD_SUBDIRECTORY(src)
 
@@ -231,7 +230,7 @@ ADD_SUBDIRECTORY(src)
 set (gatb-core-klist   ${gatb-core-klist}  PARENT_SCOPE)
 
 ################################################################################
-#  UNIT TESTS GENERATION 
+#  UNIT TESTS GENERATION
 ################################################################################
 IF (DEFINED CPPUNIT_FOUND)
     IF (EXISTS "${PROJECT_SOURCE_DIR}/test")
@@ -242,7 +241,7 @@ IF (DEFINED CPPUNIT_FOUND)
 ENDIF()
 
 ################################################################################
-#  TOOLS GENERATION 
+#  TOOLS GENERATION
 ################################################################################
 IF (NOT DEFINED GATB_CORE_EXCLUDE_TOOLS)
     ADD_SUBDIRECTORY(tools)
@@ -254,20 +253,20 @@ ENDIF()
 ADD_SUBDIRECTORY(thirdparty)
 
 ################################################################################
-#  DEPENDENCIES 
+#  DEPENDENCIES
 ################################################################################
 # we must be sure that hdf5 is built and installed before building gatb-core
 ADD_DEPENDENCIES (gatbcore-static hdf5 hdf5_postbuild)
 
 ################################################################################
-#  DOCUMENTATION GENERATION 
+#  DOCUMENTATION GENERATION
 ################################################################################
 IF (EXISTS "${PROJECT_SOURCE_DIR}/doc")
     ADD_SUBDIRECTORY(doc EXCLUDE_FROM_ALL)
 ENDIF()
 
 ################################################################################
-#  EXAMPLES GENERATION 
+#  EXAMPLES GENERATION
 ################################################################################
 IF (EXISTS "${PROJECT_SOURCE_DIR}/examples")
     IF (GATB_CORE_INCLUDE_EXAMPLES)
@@ -281,30 +280,30 @@ IF (NOT DEFINED GATB_CORE_EXCLUDE_EXAMPLES)
 ENDIF()
 
 ################################################################################
-#  INSTALL 
+#  INSTALL
 ################################################################################
 
 IF (NOT DEFINED GATB_CORE_INSTALL_EXCLUDE)
     INSTALL (FILES ${PROJECT_SOURCE_DIR}/doc/misc/README.txt  DESTINATION . OPTIONAL)
     INSTALL (FILES ${PROJECT_SOURCE_DIR}/LICENCE              DESTINATION . OPTIONAL)
     INSTALL (FILES ${PROJECT_SOURCE_DIR}/THIRDPARTIES.md      DESTINATION . OPTIONAL)
-    INSTALL (DIRECTORY ${PROJECT_SOURCE_DIR}/thirdparty/boost DESTINATION ./include)
+    #INSTALL (DIRECTORY ${PROJECT_SOURCE_DIR}/thirdparty/boost DESTINATION ./include)
 ENDIF()
 
 ################################################################################
-#  DELIVERY 
+#  DELIVERY
 ################################################################################
 SET (CPACK_PACKAGE_DESCRIPTION_SUMMARY  "gatb-core project")
 SET (CPACK_PACKAGE_VENDOR               "Genscale team (INRIA)")
 SET (CPACK_PACKAGE_VERSION_MAJOR        "${gatb-core_VERSION_MAJOR}")
 SET (CPACK_PACKAGE_VERSION_MINOR        "${gatb-core_VERSION_MINOR}")
 SET (CPACK_PACKAGE_VERSION_PATCH        "${gatb-core_VERSION_PATCH}")
-SET (CPACK_PACKAGE_VERSION              "${gatb-core-version}")  
+SET (CPACK_PACKAGE_VERSION              "${gatb-core-version}")
 SET (CPACK_PACKAGE_FILE_NAME            "${CMAKE_PROJECT_NAME}-${CPACK_PACKAGE_VERSION}-bin-${CMAKE_SYSTEM_NAME}")
 SET (CPACK_GENERATOR                    "TGZ")
 SET (CPACK_SOURCE_GENERATOR             "TGZ")
-SET (CPACK_SOURCE_IGNORE_FILES          
-    "^${PROJECT_SOURCE_DIR}/build/"  
+SET (CPACK_SOURCE_IGNORE_FILES
+    "^${PROJECT_SOURCE_DIR}/build/"
     "^${PROJECT_SOURCE_DIR}/.project"
     "^${PROJECT_SOURCE_DIR}/.gitignore"
     "^${PROJECT_SOURCE_DIR}/doc/design"
-- 
2.14.3 (Apple Git-98)

